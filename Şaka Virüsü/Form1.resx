<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>